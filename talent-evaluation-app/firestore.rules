rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }
    
    function isActiveUser() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'active';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAssignedToStudent(studentId) {
      let assignments = get(/databases/$(database)/documents/assignments/$(request.auth.uid)).data;
      return assignments.students.hasAny([studentId]) || 
             assignments.teams.hasAny(function(team) { return team.students.hasAny([studentId]); });
    }

    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated();
      allow update: if isAdmin() || (isOwner(userId) && !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role', 'status']));
      allow delete: if isAdmin();
    }

    // Assignments collection
    match /assignments/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isAdmin();
    }

    // Students collection
    match /students/{studentId} {
      allow read: if isAdmin() || 
                    (isActiveUser() && (
                      hasRole('TEACHER') || 
                      hasRole('COACH')
                    ) && isAssignedToStudent(studentId));
      allow write: if isAdmin() || 
                     (isActiveUser() && (
                       hasRole('TEACHER') || 
                       hasRole('COACH')
                     ) && isAssignedToStudent(studentId));
    }

    // Evaluations collection
    match /evaluations/{evaluationId} {
      allow read: if isAdmin() || 
                    (isActiveUser() && (
                      hasRole('TEACHER') || 
                      hasRole('COACH')
                    ) && isAssignedToStudent(resource.data.studentId));
      allow create: if isAdmin() || 
                     (isActiveUser() && (
                       hasRole('TEACHER') || 
                       hasRole('COACH')
                     ) && isAssignedToStudent(request.resource.data.studentId));
      allow update, delete: if isAdmin() || 
                             (isActiveUser() && (
                               hasRole('TEACHER') || 
                               hasRole('COACH')
                             ) && isAssignedToStudent(resource.data.studentId));
    }

    // Templates collection
    match /templates/{templateId} {
      allow read: if isActiveUser();
      allow write: if isAdmin();
    }
  }
} 